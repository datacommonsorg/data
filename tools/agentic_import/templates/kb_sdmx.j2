## SDMX Core Knowledge Base

### SDMX Structure Overview
**SDMX Structure Analysis**: The input metadata will contain SDMX structure definitions including:

- **Dimensions**: Used to categorize observations (e.g., TIME_PERIOD, REF_AREA, FREQ)
- **Attributes**: Provide additional context about observations
- **Measures**: The actual statistical values being observed

### SDMX Metadata Elements for Context Building

#### Key Metadata Fields
SDMX metadata provides rich semantic information through `<common:name>` and `<common:description>` elements that appear at multiple levels:

**1. Dataflow Level**
```xml
<structure:Dataflow id="WS_CBPOL">
  <common:name xml:lang="en">Central Bank Policy Rates</common:name>
  <common:description xml:lang="en">Policy interest rates set by central banks</common:description>
</structure:Dataflow>
```

**2. Codelist Level**
```xml
<structure:Codelist id="CL_FREQ">
  <common:name xml:lang="en">Frequency</common:name>
  <structure:Code id="M">
    <common:name xml:lang="en">Monthly</common:name>
    <common:description xml:lang="en">Monthly observations</common:description>
  </structure:Code>
</structure:Codelist>
```

**3. Concept Scheme Level**
```xml
<structure:ConceptScheme id="CS_COMMON">
  <structure:Concept id="FREQ">
    <common:name xml:lang="en">Frequency of observation</common:name>
    <common:description xml:lang="en">The time interval at which data is collected</common:description>
  </structure:Concept>
</structure:ConceptScheme>
```

**Note**: Multiple languages may be present (xml:lang="en", xml:lang="fr", etc.). Prioritize English when available.

#### How Metadata Links to Data Structure

**Dimension-to-Concept Linkage**:
- Dimensions reference concepts via `<structure:ConceptIdentity>`
- Each dimension inherits semantic meaning from its concept's name/description
- Codelists provide valid values with their own names/descriptions

**Example**:
```xml
<structure:Dimension id="REF_AREA">
  <structure:ConceptIdentity>
    <Ref id="REF_AREA"/>
  </structure:ConceptIdentity>
  <structure:LocalRepresentation>
    <structure:Enumeration>
      <Ref id="CL_AREA"/>
    </structure:Enumeration>
  </structure:LocalRepresentation>
</structure:Dimension>
```

#### Additional Metadata Elements

- **`<structure:TextFormat>`**: Specifies data type (e.g., String, Decimal)
- **`<structure:Enumeration>`**: References codelists for valid values
- **`<structure:ConceptIdentity>`**: Links dimensions/attributes to concepts

#### Using Metadata for Semantic Mapping

Combine names and descriptions to understand the semantic meaning:
- Dataflow name → helps identify the dataset's purpose
- Dimension concept names → understand what each dimension represents
- Code names/descriptions → map to appropriate Data Commons properties
- Attribute descriptions → determine if observation-level or statistical variable property

### Core SDMX to Data Commons Mappings

#### 1. Standard Dimensions

* **REF_AREA** → `observationAbout`
  * ISO country codes map to Data Commons country entities
  * Example: USA → country/USA

* **TIME_PERIOD** → `observationDate`
  * Annual: YYYY format (2023)
  * Quarterly: YYYY-Q# format (2023-Q1) → convert to end of quarter (2023-03)
  * Monthly: YYYY-MM format (2023-01)

* **FREQ** → `observationPeriod`
  * A → P1Y (Annual)
  * Q → P3M (Quarterly)
  * M → P1M (Monthly)
  * D → P1D (Daily)
  * W → P1W (Weekly)

* **INDICATOR/SERIES** → `measuredProperty` and StatVar construction
  * Determines what is being measured
  * Example: GDP_GROWTH maps to measuredProperty with populationType

#### 2. Measures

The primary observation value in SDMX:

* **OBS_VALUE**: The observation value
  * Maps to the value property in Data Commons observations

#### 3. Attributes

**IMPORTANT: SDMX attributes should only map to observation-level properties (not StatVar properties):**

* **UNIT_MEASURE**: Unit of measurement
  * Map to `unit` property with DC-compatible units
  * Examples:
    * USD → USDollar
    * EUR → Euro
    * PERCENT → Percent
    * INDEX → Index
    * PERSONS → Person

* **UNIT_MULT**: Unit multiplier (scale factor)
  * Map to `scalingFactor`
  * Examples:
    * 3 → 1000 (thousands)
    * 6 → 1000000 (millions)
    * 9 → 1000000000 (billions)

* **OBS_STATUS**: Observation status flags
  * Handle special values:
    * E → Estimated
    * P → Provisional
    * F → Forecast
    * M → Missing value
    * NA → Not applicable

* **BASE_PER**: Base period for indices
  * Map to `measurementMethod` with base year
  * Example: 2015 → BaseYear2015

#### 4. Dataflow and Dataset Metadata

* **Dataflow identifier**: Use for mapping dataflow information to properties
* **Dataset attributes**: Often found in header rows
  * Map dataset-level attributes to default values that apply globally

### SDMX-Specific Mapping Patterns

#### Hierarchical Codes
SDMX often uses hierarchical classification codes (e.g., NACE, ISIC, CPC):

* Economic activities (NACE): A → Agriculture, A01 → CropProduction
* Products (CPC): 01 → AgricultureProducts, 011 → Cereals

#### Standard Code Lists

* **ISO 4217 Currency**: USD → USDollar, EUR → Euro
* **ISO 3166 Country**: USA → country/USA, CAN → country/CAN

#### Time Series Types

* YOY → Year-over-year growth rate
* QOQ → Quarter-over-quarter growth rate
* AVG → Mean value

### SDMX Metadata Extraction and Usage Rules

1. **Parse and Extract Metadata Fields**:
   * Extract `<common:name>` and `<common:description>` from all levels (dataflow, codelists, concepts)
   * Use these to build semantic context for better mapping generation
   * Store metadata in comments or use for generating descriptive StatVar names

2. **Language Priority**:
   * When multiple languages exist (xml:lang attributes), prioritize English ("en")
   * If English unavailable, select any available language consistently

3. **Semantic Context Building**:
   * Combine dataflow name + dimension names + code descriptions to generate meaningful StatVar names
   * Use concept descriptions to determine appropriate Data Commons properties
   * Example: "Central Bank Policy Rates" + "Monthly" + "Argentina" → helps map to appropriate properties

### SDMX Missing Value Handling

Standard SDMX missing value codes and their meanings:
- **M**: Missing value - data not available
- **NA**: Not applicable - concept doesn't apply
- **":" or "-"**: No data reported
- **E**: Estimated value
- **P**: Provisional data

**Analysis Approach**: These should be noted as observation attributes affecting data quality, not as constraints on the StatVar definition.
